import * as ɵngcc0 from '@angular/core';

const _c0 = ["owl-date-time-calendar-body", ""];
const _c1 = ["role", "row", 4, "ngFor", "ngForOf"];
const _c2 = ["role", "row"];
const _c3 = [3, "class", "tabindex", "owl-dt-calendar-cell-active", "owl-dt-calendar-cell-disabled", "owl-dt-calendar-cell-in-range", "owl-dt-calendar-cell-range-from", "owl-dt-calendar-cell-range-to", "width", "paddingTop", "paddingBottom", "click", 4, "ngFor", "ngForOf"];
const _c4 = [3, "tabindex", "click"];
const _c5 = [1, "owl-dt-calendar-cell-content", 3, "ngClass"];
const _c6 = function (a0, a1, a2) { return { "owl-dt-calendar-cell-out": a0, "owl-dt-calendar-cell-today": a1, "owl-dt-calendar-cell-selected": a2 }; };
function OwlCalendarBodyComponent_tr_0_td_1_Template(rf, ctx) { if (rf & 1) {
    const _r53 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "td", _c4);
    ɵngcc0.ɵɵstyling();
    ɵngcc0.ɵɵlistener("click", function OwlCalendarBodyComponent_tr_0_td_1_Template_td_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r53); const item_r50 = ctx.$implicit; const ctx_r52 = ɵngcc0.ɵɵnextContext(2); return ctx_r52.selectCell(item_r50); });
    ɵngcc0.ɵɵelementStart(1, "span", _c5);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const item_r50 = ctx.$implicit;
    const colIndex_r51 = ctx.index;
    const rowIndex_r48 = ɵngcc0.ɵɵnextContext().index;
    const ctx_r49 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("owl-dt-calendar-cell ", item_r50.cellClass, "");
    ɵngcc0.ɵɵstyleProp("width", 100 / ctx_r49.numCols, "%");
    ɵngcc0.ɵɵstyleProp("padding-top", 50 * ctx_r49.cellRatio / ctx_r49.numCols, "%");
    ɵngcc0.ɵɵstyleProp("padding-bottom", 50 * ctx_r49.cellRatio / ctx_r49.numCols, "%");
    ɵngcc0.ɵɵclassProp("owl-dt-calendar-cell-active", ctx_r49.isActiveCell(rowIndex_r48, colIndex_r51));
    ɵngcc0.ɵɵclassProp("owl-dt-calendar-cell-disabled", !item_r50.enabled);
    ɵngcc0.ɵɵclassProp("owl-dt-calendar-cell-in-range", ctx_r49.isInRange(item_r50.value));
    ɵngcc0.ɵɵclassProp("owl-dt-calendar-cell-range-from", ctx_r49.isRangeFrom(item_r50.value));
    ɵngcc0.ɵɵclassProp("owl-dt-calendar-cell-range-to", ctx_r49.isRangeTo(item_r50.value));
    ɵngcc0.ɵɵstylingApply();
    ɵngcc0.ɵɵproperty("tabindex", ctx_r49.isActiveCell(rowIndex_r48, colIndex_r51) ? 0 : 0 - 1);
    ɵngcc0.ɵɵattribute("aria-label", item_r50.ariaLabel)("aria-disabled", !item_r50.enabled || null);
    ɵngcc0.ɵɵselect(1);
    ɵngcc0.ɵɵproperty("ngClass", ɵngcc0.ɵɵpureFunction3(15, _c6, item_r50.out, item_r50.value === ctx_r49.todayValue, ctx_r49.isSelected(item_r50.value)));
    ɵngcc0.ɵɵselect(2);
    ɵngcc0.ɵɵtextInterpolate(item_r50.displayValue);
} }
function OwlCalendarBodyComponent_tr_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "tr", _c2);
    ɵngcc0.ɵɵtemplate(1, OwlCalendarBodyComponent_tr_0_td_1_Template, 3, 19, "td", _c3);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const row_r47 = ctx.$implicit;
    ɵngcc0.ɵɵselect(1);
    ɵngcc0.ɵɵproperty("ngForOf", row_r47);
} }
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { ChangeDetectionStrategy, Component, ElementRef, EventEmitter, HostBinding, Input, NgZone, Output } from '@angular/core';
import { take } from 'rxjs/operators';
var CalendarCell = (function () {
    function CalendarCell(value, displayValue, ariaLabel, enabled, out, cellClass) {
        if (out === void 0) { out = false; }
        if (cellClass === void 0) { cellClass = ''; }
        this.value = value;
        this.displayValue = displayValue;
        this.ariaLabel = ariaLabel;
        this.enabled = enabled;
        this.out = out;
        this.cellClass = cellClass;
    }
    return CalendarCell;
}());
export { CalendarCell };
var OwlCalendarBodyComponent = (function () {
    function OwlCalendarBodyComponent(elmRef, ngZone) {
        this.elmRef = elmRef;
        this.ngZone = ngZone;
        this.activeCell = 0;
        this.numCols = 7;
        this.cellRatio = 1;
        this.select = new EventEmitter();
    }
    Object.defineProperty(OwlCalendarBodyComponent.prototype, "owlDTCalendarBodyClass", {
        get: function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OwlCalendarBodyComponent.prototype, "isInSingleMode", {
        get: function () {
            return this.selectMode === 'single';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OwlCalendarBodyComponent.prototype, "isInRangeMode", {
        get: function () {
            return this.selectMode === 'range' || this.selectMode === 'rangeFrom'
                || this.selectMode === 'rangeTo';
        },
        enumerable: true,
        configurable: true
    });
    OwlCalendarBodyComponent.prototype.ngOnInit = function () {
    };
    OwlCalendarBodyComponent.prototype.selectCell = function (cell) {
        this.select.emit(cell);
    };
    OwlCalendarBodyComponent.prototype.isActiveCell = function (rowIndex, colIndex) {
        var cellNumber = rowIndex * this.numCols + colIndex;
        return cellNumber === this.activeCell;
    };
    OwlCalendarBodyComponent.prototype.isSelected = function (value) {
        if (!this.selectedValues || this.selectedValues.length === 0) {
            return false;
        }
        if (this.isInSingleMode) {
            return value === this.selectedValues[0];
        }
        if (this.isInRangeMode) {
            var fromValue = this.selectedValues[0];
            var toValue = this.selectedValues[1];
            return value === fromValue || value === toValue;
        }
    };
    OwlCalendarBodyComponent.prototype.isInRange = function (value) {
        if (this.isInRangeMode) {
            var fromValue = this.selectedValues[0];
            var toValue = this.selectedValues[1];
            if (fromValue !== null && toValue !== null) {
                return value >= fromValue && value <= toValue;
            }
            else {
                return value === fromValue || value === toValue;
            }
        }
    };
    OwlCalendarBodyComponent.prototype.isRangeFrom = function (value) {
        if (this.isInRangeMode) {
            var fromValue = this.selectedValues[0];
            return fromValue !== null && value === fromValue;
        }
    };
    OwlCalendarBodyComponent.prototype.isRangeTo = function (value) {
        if (this.isInRangeMode) {
            var toValue = this.selectedValues[1];
            return toValue !== null && value === toValue;
        }
    };
    OwlCalendarBodyComponent.prototype.focusActiveCell = function () {
        var _this = this;
        this.ngZone.runOutsideAngular(function () {
            _this.ngZone.onStable.asObservable().pipe(take(1)).subscribe(function () {
                _this.elmRef.nativeElement.querySelector('.owl-dt-calendar-cell-active').focus();
            });
        });
    };
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], OwlCalendarBodyComponent.prototype, "activeCell", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], OwlCalendarBodyComponent.prototype, "rows", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], OwlCalendarBodyComponent.prototype, "numCols", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], OwlCalendarBodyComponent.prototype, "cellRatio", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Number)
    ], OwlCalendarBodyComponent.prototype, "todayValue", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], OwlCalendarBodyComponent.prototype, "selectedValues", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], OwlCalendarBodyComponent.prototype, "selectMode", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], OwlCalendarBodyComponent.prototype, "select", void 0);
    __decorate([
        HostBinding('class.owl-dt-calendar-body'),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [])
    ], OwlCalendarBodyComponent.prototype, "owlDTCalendarBodyClass", null);
    OwlCalendarBodyComponent = __decorate([
        __metadata("design:paramtypes", [ElementRef,
            NgZone])
    ], OwlCalendarBodyComponent);
OwlCalendarBodyComponent.ngComponentDef = ɵngcc0.ɵɵdefineComponent({ type: OwlCalendarBodyComponent, selectors: [["", "owl-date-time-calendar-body", ""]], factory: function OwlCalendarBodyComponent_Factory(t) { return new (t || OwlCalendarBodyComponent)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgZone)); }, hostBindings: function OwlCalendarBodyComponent_HostBindings(rf, ctx, elIndex) { if (rf & 1) {
        ɵngcc0.ɵɵallocHostVars(1);
        ɵngcc0.ɵɵstyling();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassProp("owl-dt-calendar-body", ctx.owlDTCalendarBodyClass);
        ɵngcc0.ɵɵstylingApply();
    } }, inputs: { activeCell: "activeCell", numCols: "numCols", cellRatio: "cellRatio", rows: "rows", todayValue: "todayValue", selectedValues: "selectedValues", selectMode: "selectMode" }, outputs: { select: "select" }, exportAs: ["owlDateTimeCalendarBody"], attrs: _c0, consts: 1, vars: 1, template: function OwlCalendarBodyComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, OwlCalendarBodyComponent_tr_0_Template, 2, 1, "tr", _c1);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.rows);
    } }, styles: [""], changeDetection: 0 });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(OwlCalendarBodyComponent, [{
        type: Component,
        args: [{
                selector: '[owl-date-time-calendar-body]',
                exportAs: 'owlDateTimeCalendarBody',
                template: "<tr *ngFor=\"let row of rows; let rowIndex = index\" role=\"row\"><td *ngFor=\"let item of row; let colIndex = index\" class=\"owl-dt-calendar-cell {{item.cellClass}}\" [tabindex]=\"isActiveCell(rowIndex, colIndex) ? 0 : -1\" [class.owl-dt-calendar-cell-active]=\"isActiveCell(rowIndex, colIndex)\" [class.owl-dt-calendar-cell-disabled]=\"!item.enabled\" [class.owl-dt-calendar-cell-in-range]=\"isInRange(item.value)\" [class.owl-dt-calendar-cell-range-from]=\"isRangeFrom(item.value)\" [class.owl-dt-calendar-cell-range-to]=\"isRangeTo(item.value)\" [attr.aria-label]=\"item.ariaLabel\" [attr.aria-disabled]=\"!item.enabled || null\" [style.width.%]=\"100 / numCols\" [style.paddingTop.%]=\"50 * cellRatio / numCols\" [style.paddingBottom.%]=\"50 * cellRatio / numCols\" (click)=\"selectCell(item)\"><span class=\"owl-dt-calendar-cell-content\" [ngClass]=\"{\n                'owl-dt-calendar-cell-out': item.out,\n                'owl-dt-calendar-cell-today': item.value === todayValue,\n                'owl-dt-calendar-cell-selected': isSelected(item.value)\n              }\">{{item.displayValue}}</span></td></tr>",
                styles: [""],
                preserveWhitespaces: false,
                changeDetection: ChangeDetectionStrategy.OnPush
            }]
    }], function () { return [{ type: ElementRef }, { type: NgZone }]; }, { elmRef: [], ngZone: [], activeCell: [{
            type: Input
        }], numCols: [{
            type: Input
        }], cellRatio: [{
            type: Input
        }], select: [{
            type: Output
        }], owlDTCalendarBodyClass: [{
            type: HostBinding,
            args: ['class.owl-dt-calendar-body']
        }], isInSingleMode: [], isInRangeMode: [], ngOnInit: [], selectCell: [], isActiveCell: [], isSelected: [], isInRange: [], isRangeFrom: [], isRangeTo: [], focusActiveCell: [], rows: [{
            type: Input
        }], todayValue: [{
            type: Input
        }], selectedValues: [{
            type: Input
        }], selectMode: [{
            type: Input
        }] });
    return OwlCalendarBodyComponent;
}());
export { OwlCalendarBodyComponent };

//# sourceMappingURL=calendar-body.component.js.map