{"version":3,"file":"calendar-month-view.component.js","sources":["D:/workspace/projects/Notisify/Angular/EAClient/node_modules old/ng-pick-datetime/date-time/calendar-month-view.component.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, HostBinding, Inject, Input, Optional, Output, ViewChild } from '@angular/core';\nimport { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS } from './adapter/date-time-format.class';\nimport { Subscription } from 'rxjs';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nvar DAYS_PER_WEEK = 7;\nvar WEEKS_PER_VIEW = 6;\nvar OwlMonthViewComponent = (function () {\n    function OwlMonthViewComponent(cdRef, dateTimeAdapter, dateTimeFormats) {\n        this.cdRef = cdRef;\n        this.dateTimeAdapter = dateTimeAdapter;\n        this.dateTimeFormats = dateTimeFormats;\n        this.hideOtherMonths = false;\n        this._firstDayOfWeek = 0;\n        this._selectMode = 'single';\n        this._selecteds = [];\n        this.localeSub = Subscription.EMPTY;\n        this.initiated = false;\n        this.selectedDates = [];\n        this.selectedChange = new EventEmitter();\n        this.userSelection = new EventEmitter();\n        this.pickerMomentChange = new EventEmitter();\n    }\n    Object.defineProperty(OwlMonthViewComponent.prototype, \"firstDayOfWeek\", {\n        get: function () {\n            return this._firstDayOfWeek;\n        },\n        set: function (val) {\n            val = coerceNumberProperty(val);\n            if (val >= 0 && val <= 6 && val !== this._firstDayOfWeek) {\n                this._firstDayOfWeek = val;\n                if (this.initiated) {\n                    this.generateWeekDays();\n                    this.generateCalendar();\n                    this.cdRef.markForCheck();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlMonthViewComponent.prototype, \"selectMode\", {\n        get: function () {\n            return this._selectMode;\n        },\n        set: function (val) {\n            this._selectMode = val;\n            if (this.initiated) {\n                this.generateCalendar();\n                this.cdRef.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlMonthViewComponent.prototype, \"selected\", {\n        get: function () {\n            return this._selected;\n        },\n        set: function (value) {\n            var oldSelected = this._selected;\n            value = this.dateTimeAdapter.deserialize(value);\n            this._selected = this.getValidDate(value);\n            if (!this.dateTimeAdapter.isSameDay(oldSelected, this._selected)) {\n                this.setSelectedDates();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlMonthViewComponent.prototype, \"selecteds\", {\n        get: function () {\n            return this._selecteds;\n        },\n        set: function (values) {\n            var _this = this;\n            this._selecteds = values.map(function (v) {\n                v = _this.dateTimeAdapter.deserialize(v);\n                return _this.getValidDate(v);\n            });\n            this.setSelectedDates();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlMonthViewComponent.prototype, \"pickerMoment\", {\n        get: function () {\n            return this._pickerMoment;\n        },\n        set: function (value) {\n            var oldMoment = this._pickerMoment;\n            value = this.dateTimeAdapter.deserialize(value);\n            this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\n            this.firstDateOfMonth = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this._pickerMoment), this.dateTimeAdapter.getMonth(this._pickerMoment), 1);\n            if (!this.isSameMonth(oldMoment, this._pickerMoment) && this.initiated) {\n                this.generateCalendar();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlMonthViewComponent.prototype, \"dateFilter\", {\n        get: function () {\n            return this._dateFilter;\n        },\n        set: function (filter) {\n            this._dateFilter = filter;\n            if (this.initiated) {\n                this.generateCalendar();\n                this.cdRef.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlMonthViewComponent.prototype, \"minDate\", {\n        get: function () {\n            return this._minDate;\n        },\n        set: function (value) {\n            value = this.dateTimeAdapter.deserialize(value);\n            this._minDate = this.getValidDate(value);\n            if (this.initiated) {\n                this.generateCalendar();\n                this.cdRef.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlMonthViewComponent.prototype, \"maxDate\", {\n        get: function () {\n            return this._maxDate;\n        },\n        set: function (value) {\n            value = this.dateTimeAdapter.deserialize(value);\n            this._maxDate = this.getValidDate(value);\n            if (this.initiated) {\n                this.generateCalendar();\n                this.cdRef.markForCheck();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlMonthViewComponent.prototype, \"weekdays\", {\n        get: function () {\n            return this._weekdays;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlMonthViewComponent.prototype, \"days\", {\n        get: function () {\n            return this._days;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlMonthViewComponent.prototype, \"activeCell\", {\n        get: function () {\n            if (this.pickerMoment) {\n                return this.dateTimeAdapter.getDate(this.pickerMoment) + this.firstRowOffset - 1;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlMonthViewComponent.prototype, \"isInSingleMode\", {\n        get: function () {\n            return this.selectMode === 'single';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlMonthViewComponent.prototype, \"isInRangeMode\", {\n        get: function () {\n            return this.selectMode === 'range' || this.selectMode === 'rangeFrom'\n                || this.selectMode === 'rangeTo';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlMonthViewComponent.prototype, \"owlDTCalendarView\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OwlMonthViewComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.generateWeekDays();\n        this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(function () {\n            _this.generateWeekDays();\n            _this.generateCalendar();\n            _this.cdRef.markForCheck();\n        });\n    };\n    OwlMonthViewComponent.prototype.ngAfterContentInit = function () {\n        this.generateCalendar();\n        this.initiated = true;\n    };\n    OwlMonthViewComponent.prototype.ngOnDestroy = function () {\n        this.localeSub.unsubscribe();\n    };\n    OwlMonthViewComponent.prototype.selectCalendarCell = function (cell) {\n        if (!cell.enabled || (this.hideOtherMonths && cell.out)) {\n            return;\n        }\n        this.selectDate(cell.value);\n    };\n    OwlMonthViewComponent.prototype.selectDate = function (date) {\n        var daysDiff = date - 1;\n        var selected = this.dateTimeAdapter.addCalendarDays(this.firstDateOfMonth, daysDiff);\n        this.selectedChange.emit(selected);\n        this.userSelection.emit();\n    };\n    OwlMonthViewComponent.prototype.handleCalendarKeydown = function (event) {\n        var moment;\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, -1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            case RIGHT_ARROW:\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, 1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            case UP_ARROW:\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, -7);\n                this.pickerMomentChange.emit(moment);\n                break;\n            case DOWN_ARROW:\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, 7);\n                this.pickerMomentChange.emit(moment);\n                break;\n            case HOME:\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, 1 - this.dateTimeAdapter.getDate(this.pickerMoment));\n                this.pickerMomentChange.emit(moment);\n                break;\n            case END:\n                moment = this.dateTimeAdapter.addCalendarDays(this.pickerMoment, this.dateTimeAdapter.getNumDaysInMonth(this.pickerMoment) -\n                    this.dateTimeAdapter.getDate(this.pickerMoment));\n                this.pickerMomentChange.emit(moment);\n                break;\n            case PAGE_UP:\n                moment = event.altKey ?\n                    this.dateTimeAdapter.addCalendarYears(this.pickerMoment, -1) :\n                    this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            case PAGE_DOWN:\n                moment = event.altKey ?\n                    this.dateTimeAdapter.addCalendarYears(this.pickerMoment, 1) :\n                    this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            case ENTER:\n                if (!this.dateFilter || this.dateFilter(this.pickerMoment)) {\n                    this.selectDate(this.dateTimeAdapter.getDate(this.pickerMoment));\n                }\n                break;\n            default:\n                return;\n        }\n        this.focusActiveCell();\n        event.preventDefault();\n    };\n    OwlMonthViewComponent.prototype.generateWeekDays = function () {\n        var longWeekdays = this.dateTimeAdapter.getDayOfWeekNames('long');\n        var shortWeekdays = this.dateTimeAdapter.getDayOfWeekNames('short');\n        var narrowWeekdays = this.dateTimeAdapter.getDayOfWeekNames('narrow');\n        var firstDayOfWeek = this.firstDayOfWeek;\n        var weekdays = longWeekdays.map(function (long, i) {\n            return { long: long, short: shortWeekdays[i], narrow: narrowWeekdays[i] };\n        });\n        this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n        this.dateNames = this.dateTimeAdapter.getDateNames();\n        return;\n    };\n    OwlMonthViewComponent.prototype.generateCalendar = function () {\n        if (!this.pickerMoment) {\n            return;\n        }\n        this.todayDate = null;\n        var startWeekdayOfMonth = this.dateTimeAdapter.getDay(this.firstDateOfMonth);\n        var firstDayOfWeek = this.firstDayOfWeek;\n        var daysDiff = 0 - (startWeekdayOfMonth + (DAYS_PER_WEEK - firstDayOfWeek)) % DAYS_PER_WEEK;\n        this.firstRowOffset = Math.abs(daysDiff);\n        this._days = [];\n        for (var i = 0; i < WEEKS_PER_VIEW; i++) {\n            var week = [];\n            for (var j = 0; j < DAYS_PER_WEEK; j++) {\n                var date = this.dateTimeAdapter.addCalendarDays(this.firstDateOfMonth, daysDiff);\n                var dateCell = this.createDateCell(date, daysDiff);\n                if (this.dateTimeAdapter.isSameDay(this.dateTimeAdapter.now(), date)) {\n                    this.todayDate = daysDiff + 1;\n                }\n                week.push(dateCell);\n                daysDiff += 1;\n            }\n            this._days.push(week);\n        }\n        this.setSelectedDates();\n    };\n    OwlMonthViewComponent.prototype.createDateCell = function (date, daysDiff) {\n        var daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(this.pickerMoment);\n        var dateNum = this.dateTimeAdapter.getDate(date);\n        var dateName = dateNum.toString();\n        var ariaLabel = this.dateTimeAdapter.format(date, this.dateTimeFormats.dateA11yLabel);\n        var enabled = this.isDateEnabled(date);\n        var dayValue = daysDiff + 1;\n        var out = dayValue < 1 || dayValue > daysInMonth;\n        var cellClass = 'owl-dt-day-' + this.dateTimeAdapter.getDay(date);\n        return new CalendarCell(dayValue, dateName, ariaLabel, enabled, out, cellClass);\n    };\n    OwlMonthViewComponent.prototype.isDateEnabled = function (date) {\n        return !!date &&\n            (!this.dateFilter || this.dateFilter(date)) &&\n            (!this.minDate || this.dateTimeAdapter.compare(date, this.minDate) >= 0) &&\n            (!this.maxDate || this.dateTimeAdapter.compare(date, this.maxDate) <= 0);\n    };\n    OwlMonthViewComponent.prototype.getValidDate = function (obj) {\n        return (this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)) ? obj : null;\n    };\n    OwlMonthViewComponent.prototype.isSameMonth = function (dateLeft, dateRight) {\n        return !!(dateLeft && dateRight &&\n            this.dateTimeAdapter.isValid(dateLeft) && this.dateTimeAdapter.isValid(dateRight) &&\n            this.dateTimeAdapter.getYear(dateLeft) === this.dateTimeAdapter.getYear(dateRight) &&\n            this.dateTimeAdapter.getMonth(dateLeft) === this.dateTimeAdapter.getMonth(dateRight));\n    };\n    OwlMonthViewComponent.prototype.setSelectedDates = function () {\n        var _this = this;\n        this.selectedDates = [];\n        if (!this.firstDateOfMonth) {\n            return;\n        }\n        if (this.isInSingleMode && this.selected) {\n            var dayDiff = this.dateTimeAdapter.differenceInCalendarDays(this.selected, this.firstDateOfMonth);\n            this.selectedDates[0] = dayDiff + 1;\n            return;\n        }\n        if (this.isInRangeMode && this.selecteds) {\n            this.selectedDates = this.selecteds.map(function (selected) {\n                if (_this.dateTimeAdapter.isValid(selected)) {\n                    var dayDiff = _this.dateTimeAdapter.differenceInCalendarDays(selected, _this.firstDateOfMonth);\n                    return dayDiff + 1;\n                }\n                else {\n                    return null;\n                }\n            });\n        }\n    };\n    OwlMonthViewComponent.prototype.focusActiveCell = function () {\n        this.calendarBodyElm.focusActiveCell();\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], OwlMonthViewComponent.prototype, \"hideOtherMonths\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], OwlMonthViewComponent.prototype, \"firstDayOfWeek\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String),\n        __metadata(\"design:paramtypes\", [String])\n    ], OwlMonthViewComponent.prototype, \"selectMode\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], OwlMonthViewComponent.prototype, \"selected\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Array),\n        __metadata(\"design:paramtypes\", [Array])\n    ], OwlMonthViewComponent.prototype, \"selecteds\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], OwlMonthViewComponent.prototype, \"pickerMoment\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Function])\n    ], OwlMonthViewComponent.prototype, \"dateFilter\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], OwlMonthViewComponent.prototype, \"minDate\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Object),\n        __metadata(\"design:paramtypes\", [Object])\n    ], OwlMonthViewComponent.prototype, \"maxDate\", null);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], OwlMonthViewComponent.prototype, \"selectedChange\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", Object)\n    ], OwlMonthViewComponent.prototype, \"userSelection\", void 0);\n    __decorate([\n        Output(),\n        __metadata(\"design:type\", EventEmitter)\n    ], OwlMonthViewComponent.prototype, \"pickerMomentChange\", void 0);\n    __decorate([\n        ViewChild(OwlCalendarBodyComponent),\n        __metadata(\"design:type\", OwlCalendarBodyComponent)\n    ], OwlMonthViewComponent.prototype, \"calendarBodyElm\", void 0);\n    __decorate([\n        HostBinding('class.owl-dt-calendar-view'),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [])\n    ], OwlMonthViewComponent.prototype, \"owlDTCalendarView\", null);\n    OwlMonthViewComponent = __decorate([\n        Component({\n            selector: 'owl-date-time-month-view',\n            exportAs: 'owlYearView',\n            template: \"<table class=\\\"owl-dt-calendar-table owl-dt-calendar-month-table\\\" [class.owl-dt-calendar-only-current-month]=\\\"hideOtherMonths\\\"><thead class=\\\"owl-dt-calendar-header\\\"><tr class=\\\"owl-dt-weekdays\\\"><th *ngFor=\\\"let weekday of weekdays\\\" [attr.aria-label]=\\\"weekday.long\\\" class=\\\"owl-dt-weekday\\\" scope=\\\"col\\\"><span>{{weekday.short}}</span></th></tr><tr><th class=\\\"owl-dt-calendar-table-divider\\\" aria-hidden=\\\"true\\\" colspan=\\\"7\\\"></th></tr></thead><tbody owl-date-time-calendar-body role=\\\"grid\\\" [rows]=\\\"days\\\" [todayValue]=\\\"todayDate\\\" [selectedValues]=\\\"selectedDates\\\" [selectMode]=\\\"selectMode\\\" [activeCell]=\\\"activeCell\\\" (keydown)=\\\"handleCalendarKeydown($event)\\\" (select)=\\\"selectCalendarCell($event)\\\"></tbody></table>\",\n            styles: [\"\"],\n            preserveWhitespaces: false,\n            changeDetection: ChangeDetectionStrategy.OnPush,\n        }),\n        __param(1, Optional()),\n        __param(2, Optional()), __param(2, Inject(OWL_DATE_TIME_FORMATS)),\n        __metadata(\"design:paramtypes\", [ChangeDetectorRef,\n            DateTimeAdapter, Object])\n    ], OwlMonthViewComponent);\n    return OwlMonthViewComponent;\n}());\nexport { OwlMonthViewComponent };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;wCAqbwC,AAQ7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cAKmB;;;;"}