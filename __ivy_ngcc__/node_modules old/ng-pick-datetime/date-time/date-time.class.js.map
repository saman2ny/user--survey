{"version":3,"file":"date-time.class.js","sources":["D:/workspace/projects/Notisify/Angular/EAClient/node_modules old/ng-pick-datetime/date-time/date-time.class.js"],"sourcesContent":["var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Inject, Input, Optional } from '@angular/core';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS } from './adapter/date-time-format.class';\nvar nextUniqueId = 0;\nvar OwlDateTime = (function () {\n    function OwlDateTime(dateTimeAdapter, dateTimeFormats) {\n        var _this = this;\n        this.dateTimeAdapter = dateTimeAdapter;\n        this.dateTimeFormats = dateTimeFormats;\n        this._showSecondsTimer = false;\n        this._hour12Timer = false;\n        this.startView = 'month';\n        this._stepHour = 1;\n        this._stepMinute = 1;\n        this._stepSecond = 1;\n        this._firstDayOfWeek = 0;\n        this._hideOtherMonths = false;\n        this.dateTimeChecker = function (dateTime) {\n            return !!dateTime &&\n                (!_this.dateTimeFilter || _this.dateTimeFilter(dateTime)) &&\n                (!_this.minDateTime || _this.dateTimeAdapter.compare(dateTime, _this.minDateTime) >= 0) &&\n                (!_this.maxDateTime || _this.dateTimeAdapter.compare(dateTime, _this.maxDateTime) <= 0);\n        };\n        if (!this.dateTimeAdapter) {\n            throw Error(\"OwlDateTimePicker: No provider found for DateTimeAdapter. You must import one of the following \" +\n                \"modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a \" +\n                \"custom implementation.\");\n        }\n        if (!this.dateTimeFormats) {\n            throw Error(\"OwlDateTimePicker: No provider found for OWL_DATE_TIME_FORMATS. You must import one of the following \" +\n                \"modules at your application root: OwlNativeDateTimeModule, OwlMomentDateTimeModule, or provide a \" +\n                \"custom implementation.\");\n        }\n        this._id = \"owl-dt-picker-\" + nextUniqueId++;\n    }\n    Object.defineProperty(OwlDateTime.prototype, \"showSecondsTimer\", {\n        get: function () {\n            return this._showSecondsTimer;\n        },\n        set: function (val) {\n            this._showSecondsTimer = coerceBooleanProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlDateTime.prototype, \"hour12Timer\", {\n        get: function () {\n            return this._hour12Timer;\n        },\n        set: function (val) {\n            this._hour12Timer = coerceBooleanProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlDateTime.prototype, \"stepHour\", {\n        get: function () {\n            return this._stepHour;\n        },\n        set: function (val) {\n            this._stepHour = coerceNumberProperty(val, 1);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlDateTime.prototype, \"stepMinute\", {\n        get: function () {\n            return this._stepMinute;\n        },\n        set: function (val) {\n            this._stepMinute = coerceNumberProperty(val, 1);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlDateTime.prototype, \"stepSecond\", {\n        get: function () {\n            return this._stepSecond;\n        },\n        set: function (val) {\n            this._stepSecond = coerceNumberProperty(val, 1);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlDateTime.prototype, \"firstDayOfWeek\", {\n        get: function () {\n            return this._firstDayOfWeek;\n        },\n        set: function (value) {\n            value = coerceNumberProperty(value, 0);\n            if (value > 6 || value < 0) {\n                this._firstDayOfWeek = 0;\n            }\n            else {\n                this._firstDayOfWeek = value;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlDateTime.prototype, \"hideOtherMonths\", {\n        get: function () {\n            return this._hideOtherMonths;\n        },\n        set: function (val) {\n            this._hideOtherMonths = coerceBooleanProperty(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlDateTime.prototype, \"id\", {\n        get: function () {\n            return this._id;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlDateTime.prototype, \"formatString\", {\n        get: function () {\n            return this.pickerType === 'both' ? this.dateTimeFormats.fullPickerInput :\n                this.pickerType === 'calendar' ? this.dateTimeFormats.datePickerInput :\n                    this.dateTimeFormats.timePickerInput;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlDateTime.prototype, \"disabled\", {\n        get: function () {\n            return false;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OwlDateTime.prototype.getValidDate = function (obj) {\n        return (this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)) ? obj : null;\n    };\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], OwlDateTime.prototype, \"showSecondsTimer\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], OwlDateTime.prototype, \"hour12Timer\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", String)\n    ], OwlDateTime.prototype, \"startView\", void 0);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], OwlDateTime.prototype, \"stepHour\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], OwlDateTime.prototype, \"stepMinute\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], OwlDateTime.prototype, \"stepSecond\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Number),\n        __metadata(\"design:paramtypes\", [Number])\n    ], OwlDateTime.prototype, \"firstDayOfWeek\", null);\n    __decorate([\n        Input(),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], OwlDateTime.prototype, \"hideOtherMonths\", null);\n    OwlDateTime = __decorate([\n        __param(0, Optional()),\n        __param(1, Optional()), __param(1, Inject(OWL_DATE_TIME_FORMATS)),\n        __metadata(\"design:paramtypes\", [DateTimeAdapter, Object])\n    ], OwlDateTime);\n    return OwlDateTime;\n}());\nexport { OwlDateTime };\n"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sSAiMoB;;;;"}